services:
  db1:
    image: postgres:latest
    container_name: db-application
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: eventHub
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5431:5432"

  db2:
    image: postgres:latest
    container_name: db-event-notify
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: eventNotify
    volumes:
      - ./data-vent-notify:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  eventService:
#    build:
#      context: ../        # подняться на уровень выше
#      dockerfile: Dockerfile
#    container_name: eventservice
#    image: eventservice:latest
#    depends_on:
#      - db1
#      - kafka
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db1:5432/eventHub
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: admin
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8080:8080"

#  minio:
#    image: minio/minio:latest
#    container_name: minio
#    ports:
#      - "9001:9001"
#      - "9002:9000"
#    environment:
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    command: server /data --console-address ":9001"