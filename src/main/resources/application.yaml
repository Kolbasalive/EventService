spring:
  application:
    name: "EventHub"
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
#  security:
#    user:
#      name: admin
#      password: admin
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  flyway:
    locations: classpath:db/migration
    user: ${DB_USER}
    password: ${DB_PASS}
    enabled: true
logging:
  level:
    org:
      springframework:
        security:
          web: DEBUG
#  profiles:
#    active: ${SPRING_PROFILES_ACTIVE:prod}
#logging:
#  level:
#    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration: DEBUG
#    org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: DEBUG
#    org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl: DEBUG
#    org.springframework.jdbc.datasource.DriverManagerDataSource: DEBUG
#    com.zaxxer.hikari: DEBUG
#    org:
#      flywaydb: DEBUG

app:
  kafka:
    topic:
      events: new-events-topic

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always